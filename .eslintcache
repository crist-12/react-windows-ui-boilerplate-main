[{"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\index.js":"1","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\App.js":"2","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\components\\MasterPage.js":"3","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\context\\DataContext.js":"4","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\shared\\constants.js":"5","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\categorias\\index.js":"6","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\equipos\\index.js":"7","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\asignar\\index.js":"8","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\bitacora\\index.js":"9","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\perfil\\index.js":"10","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\home\\index.js":"11","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\configuraciones\\index.js":"12","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\login\\index.js":"13","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\empleados\\index.js":"14","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\ciudades\\index.js":"15","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\areas\\index.js":"16","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\components\\Navigation.js":"17","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\stores\\MasterStore.js":"18","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\stores\\AuthStore.js":"19","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\page2\\index.js":"20","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\page1\\index.js":"21","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\page0\\index.js":"22","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\sucursales\\index.js":"23"},{"size":355,"mtime":1643237076423,"results":"24","hashOfConfig":"25"},{"size":2771,"mtime":1645051922287,"results":"26","hashOfConfig":"25"},{"size":664,"mtime":1643410041011,"results":"27","hashOfConfig":"25"},{"size":433,"mtime":1644954600694,"results":"28","hashOfConfig":"25"},{"size":78,"mtime":1643236816008,"results":"29","hashOfConfig":"25"},{"size":6561,"mtime":1644957588065,"results":"30","hashOfConfig":"25"},{"size":6382,"mtime":1645117242011,"results":"31","hashOfConfig":"25"},{"size":555,"mtime":1642777746232,"results":"32","hashOfConfig":"25"},{"size":558,"mtime":1642777767575,"results":"33","hashOfConfig":"25"},{"size":552,"mtime":1642777968768,"results":"34","hashOfConfig":"25"},{"size":783,"mtime":1643127360031,"results":"35","hashOfConfig":"25"},{"size":4002,"mtime":1645117014028,"results":"36","hashOfConfig":"25"},{"size":4076,"mtime":1643404905616,"results":"37","hashOfConfig":"25"},{"size":8018,"mtime":1645126490141,"results":"38","hashOfConfig":"25"},{"size":6470,"mtime":1644959180946,"results":"39","hashOfConfig":"25"},{"size":6504,"mtime":1645052141517,"results":"40","hashOfConfig":"25"},{"size":2471,"mtime":1644956239831,"results":"41","hashOfConfig":"25"},{"size":370,"mtime":1644956747216,"results":"42","hashOfConfig":"25"},{"size":1574,"mtime":1643406319523,"results":"43","hashOfConfig":"25"},{"size":764,"mtime":1642719106690,"results":"44","hashOfConfig":"25"},{"size":795,"mtime":1642776782778,"results":"45","hashOfConfig":"25"},{"size":1191,"mtime":1642776246817,"results":"46","hashOfConfig":"25"},{"size":8083,"mtime":1645119018505,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1uoh7lo",{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"50"},"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\index.js",[],["111","112"],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\App.js",["113","114","115","116","117","118","119","120","121","122","123"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Switch, Route, Redirect, HashRouter as Router } from 'react-router-dom'\r\nimport { AppTheme, SplashScreen, NavBar, NavBarLink, NavSearchSuggestion } from 'react-windows-ui'\r\nimport Login from './pages/login'\r\nimport Asignar from './pages/asignar'\r\nimport Bitacora from './pages/bitacora'\r\nimport Categoria from './pages/categorias'\r\nimport Equipos from './pages/equipos'\r\nimport Perfil from './pages/perfil'\r\nimport Home from './pages/home'\r\nimport Empleado from './pages/empleados'\r\nimport Configuracion from './pages/configuraciones'\r\nimport Areas from './pages/areas'\r\nimport Sucursal from './pages/sucursales'\r\nimport Ciudad from './pages/ciudades'\r\nimport MasterPage from './components/MasterPage'\r\nimport {DataContext, DataProvider} from './context/DataContext'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nimport { channels } from '../shared/constants';\r\nconst { ipcRenderer } = window;\r\n\r\nconst App = () => {\r\n\r\n  const [splash, setSplash] = useState(true);\r\n  const [prueba, setPrueba] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n   setSplash(false);\r\n   /*ipcRenderer.send(channels.APP_INFO);\r\n    ipcRenderer.on(channels.APP_INFO, (event, arg) => {\r\n      ipcRenderer.removeAllListeners(channels.APP_INFO);\r\n      const { appName, appVersion } = arg;\r\n      setAppName(appName);\r\n      setAppVersion(appVersion);\r\n    }); */\r\n\r\n    axios.get(process.env.REACT_APP_HOME)\r\n    .then(res => {\r\n      const data = res.data;\r\n\r\n      setPrueba(data);\r\n      console.log(prueba)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n  \r\n   console.log(prueba);\r\n   console.log(process.env.REACT_APP_HOME)\r\n   console.log(process.env.REACT_APP_ELECTRON_START_URL);\r\n  }, [])\r\n\r\n  return (\r\n    <DataProvider>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={Login}  exact />\r\n        <Route exact path=\"/react-windows-ui\">\r\n            <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/asignar\" component={Asignar} />\r\n        <Route path=\"/empleado\" component={Empleado} />\r\n        <Route path=\"/bitacora\" component={Bitacora} />\r\n        <Route path=\"/categoria\" component={Categoria} />\r\n        <Route path=\"/equipo\" component={Equipos} />\r\n        <Route path=\"/perfil\" component={Perfil} />\r\n        <Route path=\"/configuraciones\" component={Configuracion} />\r\n        <Route path=\"/ciudades\" component={Ciudad} />\r\n        <Route path=\"/master\" component={MasterPage} />\r\n        <Route path=\"/sucursal\" component={Sucursal} />\r\n        <Route path=\"/areas\" component={Areas} />\r\n      </Switch>\r\n    </Router>\r\n    </DataProvider>\r\n  )\r\n}\r\n    \r\nexport default App;","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\components\\MasterPage.js",["124","125","126"],"import { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../components/Navigation'\r\nimport { useMasterState } from '../stores/MasterStore'\r\n\r\nconst MasterPage = () => {\r\n\r\n    const masterState = useMasterState();\r\n\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n            <h1>{masterState.get().name}</h1>\r\n            <p>{masterState.get().name}</p>\r\n            <div className=\"app-hr\"></div>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MasterPage","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\context\\DataContext.js",[],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\shared\\constants.js",[],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\categorias\\index.js",["127"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport \"../categorias/index.css\"\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst Categoria = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Categoria',\r\n      field: 'categoria'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"category\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"DescripcionCategoria\": categoria })\r\n      })\r\n      setCategoria(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:9000/category\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdCategoria,\r\n          categoria: ele.DescripcionCategoria ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Categoría</h1>\r\n              <p>Añada, modifique o elimine categoría de productos</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Categoría</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de la categoria: </p>\r\n                    <input\r\n                      value={categoria}\r\n                      onChange={e => setCategoria(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categoria","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\equipos\\index.js",["128","129","130","131"],"\r\nimport { NavPageContainer, InputText, RadioButton, Select, Button, NavPageContainerRight, LinkCompound } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nconst Equipos = () => {\r\n\r\nconst [marca, setMarca] = useState(\"\")\r\nconst [modelo, setModelo] = useState(\"\")\r\nconst [serie, setSerie] = useState(\"\")\r\nconst [fechaAd, setFechaAd] = useState()\r\nconst [procesador, setProcesador] = useState(\"\")\r\nconst [tipoD, setTipoD] = useState(\"\")\r\nconst [ram, setRAM] = useState(\"\")\r\nconst [precio, setPrecio] = useState(\"\")\r\nconst [factura, setFactura] = useState(\"\")\r\n\r\n\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n            <h1>Equipos</h1>\r\n            <p>Añada, modifique o elimine registro de sus equipos informáticos.</p>\r\n            <div className=\"app-hr\"></div>\r\n            <div style={{margin: 2, alignItems: 'center', width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Marca del Equipo:</p>\r\n            <InputText\r\n              placeholder=\"Marca del equipo\"\r\n              tooltip=\"Ingrese la marca del equipo\"\r\n              value={marca}\r\n              onChange={e => setMarca(e.target.value)}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Modelo del Equipo:</p>\r\n            <InputText\r\n              placeholder=\"Modelo del equipo\"\r\n              tooltip=\"Ingrese el modelo del equipo\"\r\n              value={modelo}\r\n              onChange={e => setModelo(e.target.value)}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Número de serie:</p>\r\n            <InputText\r\n              placeholder=\"Número de serie\"\r\n              tooltip=\"Ingrese el número de serie\"\r\n              value = {serie}\r\n              onChange={e => setSerie(e.target.value)}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Fecha de Adquisición:</p>\r\n            <InputText\r\n              type=\"date\"\r\n              placeholder=\"Selecciona una fecha\"\r\n              tooltip=\"Selecciona la fecha de adquisición del equipo\"\r\n              value={fechaAd}\r\n              onChange={e => setFechaAd(e.target.value)}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Procesador:</p>\r\n            <InputText\r\n              placeholder=\"Datos del procesador\"\r\n              tooltip=\"Ingrese los datos del procesador del equipo\"\r\n              value={procesador}\r\n              onChange={e => setProcesador(e.target.value)}\r\n            />\r\n            </div>\r\n            <p style={{marginRight: '10px', marginTop: '30px'}}>Tipo de disco duro:</p>\r\n            <div style={{display: 'inline-flex'}}>\r\n            <RadioButton\r\n                defaultChecked={true}\r\n                name=\"disk\"\r\n                value=\"HDD\"\r\n                label=\"Hard Disk Drive HDD\"\r\n                onChange={() => setTipoD(\"HDD\")}\r\n              />\r\n              <div style={{marginRight: '30px'}}></div>\r\n              <RadioButton\r\n                defaultChecked={false}\r\n                name=\"disk\"\r\n                value=\"SSD\"\r\n                label=\"Solid State Drive SSD\"\r\n                onChange={()=> setTipoD(\"SSD\")}\r\n              />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Memoria RAM:</p>\r\n            <InputText\r\n              type=\"number\"\r\n              placeholder=\"Memoria RAM instalada\"\r\n              tooltip=\"Cantidad de RAM instalada\"\r\n              value={ram}\r\n              onChange={e => setRAM(e.target.value)}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Tipo de RAM:</p>\r\n            <Select\r\n              defaultValue=\"2\" //Optional\r\n            //  onChange={}\r\n              data={[\r\n                {label: 'DDR3', value: '2'},\r\n                {label: 'DDR4', value: '3'},\r\n                {label: 'DDR5', value: '4'},\r\n              ]}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n            <p style={{marginRight: '10px'}}>Precio + ISV:</p>\r\n            <InputText\r\n              label=\"L. \"\r\n              width= {225}\r\n              placeholder=\"0.00\"\r\n              tooltip=\"Precio más el impuesto del equipo\"\r\n              style={{alignItems: 'right'}}\r\n              value={precio}\r\n              onChange={e => setPrecio(e.target.value)}\r\n            />\r\n            </div>\r\n            <div style={{marginTop: '30px', alignItems: 'center',  width: '100%'}}>\r\n              <p style={{marginRight: '10px'}}>Factura del equipo:</p>\r\n              <label htmlFor=\"filePicker\" style={{ background:\"grey\", padding:\"5px 10px\" }}>\r\n                  Explorar archivos\r\n              </label>\r\n              <input id=\"filePicker\" style={{visibility:\"hidden\"}} type={\"file\"}></input>\r\n            </div>\r\n            <div style={{marginTop: '30px', marginBottom: '80px'}}>\r\n              <Button\r\n                value=\"Registrar equipo\"\r\n                isLoading={false}\r\n                icon={<i className=\"icons10-plus\"></i>}\r\n                onClick={() => {}}\r\n                tooltip=\"Registrar el equipo\"\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        </NavPageContainer>\r\n        <NavPageContainerRight style={{marginTop: '40px'}}>\r\n        <h4 className=\"m-5\">Acciones</h4>\r\n        <LinkCompound\r\n          to=\"#\"\r\n          title=\"Equipos registrados\"\r\n          subtitle=\"Ver detalladamente los equipos registrados\"\r\n          icon={<i className=\"icons10-area-chart color-primary\"></i>}\r\n          \r\n        />\r\n      </NavPageContainerRight>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Equipos","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\asignar\\index.js",["132","133"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nconst Asignar = () => {\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n\r\n            <h1>Asignar</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Asignar","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\bitacora\\index.js",["134","135"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nconst Bitacora = () => {\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n\r\n            <h1>Bitacora</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Bitacora","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\perfil\\index.js",["136","137"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nconst Perfil = () => {\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n\r\n            <h1>Perfil</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Perfil","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\home\\index.js",["138","139","140","141","142","143"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { AppTheme } from 'react-windows-ui'\r\nimport { ColorPickerItem } from 'react-windows-ui'\r\nimport { DataContext } from '../../context/DataContext'\r\n\r\nconst Home = () => {\r\n\r\n  const {theme, color} = useContext( DataContext );\r\n\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n            \r\n            <h1>Home</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\configuraciones\\index.js",["144","145","146","147","148","149","150"],"\r\nimport { NavPageContainer, NavPageContainerRight, ColorPickerItem, ColorPickerPalette, LinkCompound } from 'react-windows-ui'\r\nimport React, { useEffect, createContext } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { DataContext, DataProvider } from '../../context/DataContext'\r\nimport MasterPage from '../../components/MasterPage'\r\nimport {Link} from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useMasterState, setThemeColor } from '../../stores/MasterStore'\r\n\r\n\r\nconst Configuracion = () => {\r\n\r\nconst { setColor } = createContext(DataContext);\r\nconst history = useHistory();\r\nconst masterState = useMasterState();\r\n\r\n\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n\r\n            <h1>Configuraciones del Sistema</h1>\r\n            <p>Configure sus preferencias del sistema.</p>\r\n            <div className=\"app-hr\"></div>\r\n            <div className=\"home-color-picker\">\r\n              <h2>Color del sistema</h2>\r\n              <ColorPickerItem\r\n                defaultChecked\r\n                name=\"1\"\r\n                color=\"#0078D7\"\r\n                onChange={ (color) => setThemeColor(color.target.value)}/>\r\n              <ColorPickerItem\r\n                name=\"1\"\r\n                color=\"#6632a8\"\r\n                onChange={ (color) => setThemeColor(color.target.value)}/>\r\n              <ColorPickerItem\r\n                name=\"1\"\r\n                color=\"#881798\"\r\n                onChange={ (color) => setThemeColor(color.target.value)}/>\r\n              \r\n              <ColorPickerItem\r\n                name=\"1\"\r\n                color=\"#00B294\"\r\n                onChange={ (color) => setThemeColor(color.target.value)}/>\r\n              <ColorPickerItem\r\n                name=\"1\"\r\n                color=\"#69797E\"\r\n                onChange={ (color) => setThemeColor(color.target.value)}/>\r\n              <ColorPickerPalette\r\n                name=\"1\"\r\n                color=\"#5ebd06\"\r\n                onChange={ (color) => setThemeColor(color.target.value)}/>\r\n            </div>\r\n            <div>\r\n            <h2>Más configuraciones</h2>\r\n                <LinkCompound\r\n                  style={{margin:'5px 5px 0 0',width:300}}\r\n                  to=\"/sucursal\"\r\n                  title=\"Sucursales\"\r\n                  subtitle=\"Administrar registros de sucursales\"\r\n                  icon={<i className=\"icons10-location\"></i>}\r\n                  focused={true}\r\n                  margin=\"5px 5px 0 0\" \r\n                  \r\n                  />\r\n\r\n                <LinkCompound\r\n                  style={{margin:'5px 5px 0 0',width:300}}\r\n                  to=\"/ciudades\"\r\n                  title=\"Ciudades\"\r\n                  subtitle=\"Administrar registros de ciudades\"\r\n                  icon={<i className=\"icons10-location-point\"></i>}\r\n                  focused={true} />\r\n\r\n                <LinkCompound\r\n                  style={{margin:'5px 5px 0 0',width:300}}\r\n                  to = \"/areas\"\r\n                  title=\"Áreas\"\r\n                  subtitle=\"Administrar áreas y departamentos\"\r\n                  icon={<i className=\"icons10-fax\"></i>}\r\n                  focused={true}\r\n                  onClick={()=> {\r\n                   masterState.set({\r\n                     name: \"Area\",\r\n                     description: \"Description\"\r\n                   })\r\n                 } } \r\n                >\r\n                  \r\n                </LinkCompound>\r\n\r\n                <LinkCompound\r\n                  to=\"/ContactsLayout\"\r\n                  title=\"Mantenimientos\"\r\n                  subtitle=\"Registrar mantenimientos de equipos\"\r\n                  icon={<i className=\"icons10-services\"></i>}\r\n                  focused={true}\r\n                  style={{margin:'5px 5px 0 0',width:300}} />\r\n\r\n            </div>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\nexport default Configuracion;","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\login\\index.js",["151","152","153","154","155"],"import React, {Image, useState, useEffect} from 'react'\r\nimport login from \"../../assets/login.jpg\"\r\nimport { AvatarView, InputText, Button, SplashScreen } from 'react-windows-ui'\r\nimport user from \"../../assets/user.png\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useAuthState, loginUser } from '../../stores/AuthStore'\r\nimport { Alert } from 'react-windows-ui'\r\n\r\nconst Login = () => {\r\n\r\n    const [splash, setSplash] = useState(true);\r\n    const history = useHistory();\r\n    const authState = useAuthState();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [message, setMessage] = useState(\"Algo salió mal, inténtalo de nuevo\")\r\n\r\n    const [validate, setValidate] = useState(false);\r\n\r\n    useEffect(() => {\r\n     setSplash(false);\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n\r\n    }, [])\r\n\r\n    const handleLogin = async() => {\r\n        if(username == \"\"){\r\n           setValidate(true)\r\n           setMessage(\"El nombre de usuario no puede estar vacío\")\r\n           return\r\n        }\r\n        if(password == \"\"){\r\n            setValidate(true)\r\n            setMessage(\"La contraseña no puede estar vacía\")\r\n            return\r\n        }\r\n       /* if(loginUser(username, password)){\r\n            history.push(\"/home\")\r\n            setValidate(false)\r\n            return\r\n        }else{\r\n            setValidate(true)\r\n            setMessage(\"Ocurrió un error al tratar de iniciar sesión\")\r\n            return\r\n        } */\r\n\r\n       await loginUser(username, password);\r\n       if(authState.get().isLoggedIn){\r\n            history.push(\"/home\")\r\n            setValidate(false)\r\n            return\r\n       }else{\r\n            setValidate(true)\r\n            setMessage(authState.me.get().message)\r\n            return\r\n       }\r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <SplashScreen\r\n            //duration={1000} // adjust how long it takes after render \r\n            isVisible={splash}\r\n            title={\"Kassa\"}\r\n            />\r\n        <div style={{backgroundImage:`url(${login})`, height: '100vh', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', flex:1, display: 'flex', flexDirection: 'column'}}>\r\n            <div style={{display: 'flex', flex: 1, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n            {\r\n\r\n            \r\n            <Alert\r\n                isVisible={validate}\r\n                title=\"Atención\"\r\n                message={message}\r\n                onBackdropPress={()=>{setValidate(false)}}>\r\n                <button onClick={()=>{setValidate(false)}}>OK</button>\r\n            </Alert>\r\n        }\r\n            <AvatarView\r\n                src={user}\r\n                isLoading={false}\r\n                size=\"medium\"\r\n                showDropShadow={false}\r\n                />\r\n            </div>\r\n            <div style={{flex:2, display:'flex', alignItems: 'flex-start', justifyContent:'center', flex:2}}>\r\n            <div style={{display:'block', textAlign: 'center'}}>\r\n            <h2 style={{color: 'white'}}>Iniciar Sesión</h2>\r\n            <InputText\r\n                placeholder=\"Nombre de Usuario\"\r\n                tooltip=\"Ingrese nombre de usuario\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            <InputText\r\n                type=\"password\"\r\n                placeholder=\"Ingrese su contraseña\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                /> \r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            <Button\r\n                value=\"Iniciar Sesión\"\r\n                isLoading={false}\r\n                onClick={handleLogin}\r\n                tooltip=\"Iniciar Sesión\"\r\n                />\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\empleados\\index.js",["156","157","158","159"],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\ciudades\\index.js",["160","161"],"\r\nimport { NavPageContainer, Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst Ciudad = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [ciudad, setCiudad] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Ciudad',\r\n      field: 'ciudad'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"city\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"NombreCiudad\": ciudad })\r\n      })\r\n      setCiudad(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"city\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdCiudad,\r\n          ciudad: ele.NombreCiudad ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Ciudades</h1>\r\n              <p>Añada, modifique o elimine registro de ciudades</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Ciudad</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de la ciudad: </p>\r\n                    <input\r\n                      value={ciudad}\r\n                      onChange={e => setCiudad(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Ciudad","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\areas\\index.js",["162"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport \"../categorias/index.css\"\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst Areas = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Área',\r\n      field: 'area'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"area\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"DescripcionArea\": categoria })\r\n      })\r\n      setCategoria(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"El área se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar el área\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:9000/area\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdArea,\r\n          area: ele.DescripcionArea ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Áreas</h1>\r\n              <p>Ingrese y administre los registros de las áreas de la empresa</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva área</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre del área: </p>\r\n                    <input\r\n                      value={categoria}\r\n                      onChange={e => setCategoria(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Areas","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\components\\Navigation.js",["163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { useEffect, useContext } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { AppTheme, SplashScreen, NavBar, NavBarLink, NavSearchSuggestion } from 'react-windows-ui'\r\nimport Page0 from '../pages/page0'\r\nimport Page1 from '../pages/page1'\r\nimport Page2 from '../pages/page2'\r\nimport Login from '../pages/login'\r\nimport Img from '../assets/mountain.jpg'\r\nimport {DataContext} from '../context/DataContext'\r\nimport { useMasterState, setThemeColor } from '../stores/MasterStore'\r\n\r\nconst NavigationWindow = () => {\r\n\r\n  const {theme} = useContext( DataContext );\r\n\r\n  const masterState = useMasterState();\r\n\r\n    return(\r\n    <>\r\n    <AppTheme\r\n      color = {masterState.get().color}\r\n      scheme= {'light'}\r\n      onColorChange={()=> {}}\r\n      onSchemeChange={()=> {}}\r\n      />\r\n    <NavBar \r\n      title=\"Kassa\"\r\n     // mobileHasIcons={true}\r\n      shadowOnScroll={true}>\r\n\r\n      <NavSearchSuggestion\r\n        placeholder=\"Buscar en las páginas..\"\r\n        tooltip=\"Búsqueda\"\r\n        data={[\r\n          {label: 'home', link: '/', icon: <i className=\"icons10-home\"></i>},\r\n          {label: 'asignar', link: '/asignar', icon: <i className=\"icons10-link\"></i>}\r\n        ]}\r\n      />\r\n\r\n      <h1>Módulos</h1>\r\n      <div className=\"app-hr\"></div>\r\n\r\n      <NavBarLink\r\n        to=\"/home\"\r\n        exact={true}\r\n        text=\"Home\"\r\n        icon={<i className='icons10-home'></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/asignar\"\r\n        text=\"Asignar\"\r\n        icon={<i className=\"icons10-link\"></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/empleado\"\r\n        text=\"Empleado\"\r\n        icon={<i className=\"icons10-user\"></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/equipo\"\r\n        text=\"Equipos\"\r\n        icon={<i className=\"icons10-notebook\"></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/categoria\"\r\n        text=\"Categorías\"\r\n        icon={<i className=\"icons10-parallel-tasks\"></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/bitacora\"\r\n        text=\"Bitácora\"\r\n        icon={<i className=\"icons10-tasks\"></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/perfil\"\r\n        text=\"Mi Perfil\"\r\n        icon={<i className=\"icons10-user-settings\"></i>}\r\n      />\r\n\r\n      <NavBarLink\r\n        to=\"/configuraciones\"\r\n        text=\"Configuraciones\"\r\n        icon={<i className=\"icons10-settings\"></i>}\r\n      />\r\n    </NavBar>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default NavigationWindow;","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\stores\\MasterStore.js",["175"],"import { createState, useState } from '@hookstate/core';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initialState = {\r\n    color: \"#16ab9c\"\r\n}\r\n\r\nconst masterState = createState(initialState);\r\n\r\nexport const setThemeColor = (color) => {\r\n    masterState.set({\r\n        color: color\r\n    }) \r\n}\r\n\r\n\r\nexport const useMasterState = () => {\r\n    return useState(masterState);\r\n}","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\stores\\AuthStore.js",[],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\page2\\index.js",[],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\page1\\index.js",["176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"\nimport { NavPageContainer,Link } from 'react-windows-ui'\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AppTheme, SplashScreen, NavBar, NavBarLink, NavSearchSuggestion } from 'react-windows-ui'\nimport Page0 from '../page0/'\nimport Page2 from '../page2'\nimport Login from '../login'\nimport Img from '../../assets/mountain.jpg'\nimport NavigationWindow from '../../components/Navigation'\n\nconst Page1 = () => {\n\n\n\n    return (\n      <>\n  <NavigationWindow/>\n    <NavPageContainer\n      hasPadding={true}\n      animateTransition={true}>\n\n      <h1>Page 1</h1>\n      <p>Start adding your fantastic ui here.</p>\n      <Link>Components here</Link>\n     \n    </NavPageContainer>\n    </>\n  );\n}\n\nexport default Page1","C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\page0\\index.js",[],"C:\\Users\\USUARIO\\source\\repos\\rvInventory\\src\\react\\pages\\sucursales\\index.js",["190","191","192","193","194","195"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\nimport useState from 'react-usestateref'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst Sucursal = () => {\r\n\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [sucursalName, setSucursalName] = React.useState(\"\")\r\n  const [selectedCity, setSelectedCity] = React.useState(\"\")\r\n  const [listCat, setlistCat] = React.useState(\"\")\r\n  const [loading, setLoading] = React.useState(true)\r\n  const [cities, setCities, citiesRef] = useState();\r\n  const [label, setLabel] = useState();\r\n\r\n  let enumList = []\r\n\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      field: 'sucursal'\r\n    },\r\n    {\r\n      title: 'Ciudad',\r\n      field: 'ciudad'\r\n    }\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n    getCities()\r\n  }, [])\r\n\r\n\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"sucursales\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"NombreSucursal\": sucursalName, \"IdCiudad\": selectedCity })\r\n      })\r\n      console.log(sucursalName)\r\n      console.log(selectedCity)\r\n      setSucursalName(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"sucursales\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdSucursal,\r\n          ciudad: ele.NombreCiudad ?? \"No hay\",\r\n          sucursal: ele.NombreSucursal\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(true)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getCities = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"city\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          value: ele.IdCiudad,\r\n          label: ele.NombreCiudad\r\n        }\r\n        arre.push(obj)\r\n        //enumList.push(obj.label)\r\n        //setLabel([...label, obj.label])\r\n        console.log(obj)\r\n      })\r\n      setCities(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Sucursales</h1>\r\n              <p>Añada, modifique o elimine sucursales</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Sucursal</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de sucursal: </p>\r\n                    <input\r\n                      value={sucursalName}\r\n                      onChange={e => setSucursalName(e.target.value)}\r\n                      style={{ width: '70%', height: '30px' }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <p>Nombre de la ciudad: </p>\r\n                    <Select\r\n                      options={cities}\r\n                      theme={(theme)=> ({\r\n                        ...theme,\r\n                        colors: {\r\n                          ...theme.colors,\r\n                          text: 'white',\r\n                          primary: 'red'\r\n                        }\r\n                      })}\r\n                      onChange = {(e)=> setSelectedCity(e.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      style={{ marginTop: '30px', marginLeft: '0px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sucursal",{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":1,"column":38,"nodeType":"202","messageId":"203","endLine":1,"endColumn":48},{"ruleId":"200","severity":1,"message":"204","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":18},{"ruleId":"200","severity":1,"message":"205","line":3,"column":20,"nodeType":"202","messageId":"203","endLine":3,"endColumn":32},{"ruleId":"200","severity":1,"message":"206","line":3,"column":34,"nodeType":"202","messageId":"203","endLine":3,"endColumn":40},{"ruleId":"200","severity":1,"message":"207","line":3,"column":42,"nodeType":"202","messageId":"203","endLine":3,"endColumn":52},{"ruleId":"200","severity":1,"message":"208","line":3,"column":54,"nodeType":"202","messageId":"203","endLine":3,"endColumn":73},{"ruleId":"200","severity":1,"message":"209","line":17,"column":9,"nodeType":"202","messageId":"203","endLine":17,"endColumn":20},{"ruleId":"200","severity":1,"message":"210","line":22,"column":10,"nodeType":"202","messageId":"203","endLine":22,"endColumn":18},{"ruleId":"200","severity":1,"message":"211","line":23,"column":9,"nodeType":"202","messageId":"203","endLine":23,"endColumn":20},{"ruleId":"200","severity":1,"message":"212","line":27,"column":10,"nodeType":"202","messageId":"203","endLine":27,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":55,"column":6,"nodeType":"215","endLine":55,"endColumn":8,"suggestions":"216"},{"ruleId":"200","severity":1,"message":"217","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":31},{"ruleId":"200","severity":1,"message":"218","line":2,"column":17,"nodeType":"202","messageId":"203","endLine":2,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":2,"column":27,"nodeType":"202","messageId":"203","endLine":2,"endColumn":36},{"ruleId":"200","severity":1,"message":"220","line":35,"column":13,"nodeType":"202","messageId":"203","endLine":35,"endColumn":21},{"ruleId":"200","severity":1,"message":"219","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"200","severity":1,"message":"221","line":13,"column":8,"nodeType":"202","messageId":"203","endLine":13,"endColumn":13},{"ruleId":"200","severity":1,"message":"222","line":16,"column":8,"nodeType":"202","messageId":"203","endLine":16,"endColumn":15},{"ruleId":"200","severity":1,"message":"223","line":16,"column":17,"nodeType":"202","messageId":"203","endLine":16,"endColumn":27},{"ruleId":"200","severity":1,"message":"218","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"200","severity":1,"message":"218","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"200","severity":1,"message":"218","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"200","severity":1,"message":"218","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"200","severity":1,"message":"204","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":18},{"ruleId":"200","severity":1,"message":"224","line":6,"column":10,"nodeType":"202","messageId":"203","endLine":6,"endColumn":25},{"ruleId":"200","severity":1,"message":"225","line":11,"column":10,"nodeType":"202","messageId":"203","endLine":11,"endColumn":15},{"ruleId":"200","severity":1,"message":"226","line":11,"column":17,"nodeType":"202","messageId":"203","endLine":11,"endColumn":22},{"ruleId":"200","severity":1,"message":"227","line":2,"column":28,"nodeType":"202","messageId":"203","endLine":2,"endColumn":49},{"ruleId":"200","severity":1,"message":"219","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":26},{"ruleId":"200","severity":1,"message":"228","line":5,"column":23,"nodeType":"202","messageId":"203","endLine":5,"endColumn":35},{"ruleId":"200","severity":1,"message":"229","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":18},{"ruleId":"200","severity":1,"message":"217","line":7,"column":9,"nodeType":"202","messageId":"203","endLine":7,"endColumn":13},{"ruleId":"200","severity":1,"message":"230","line":14,"column":9,"nodeType":"202","messageId":"203","endLine":14,"endColumn":17},{"ruleId":"200","severity":1,"message":"231","line":15,"column":7,"nodeType":"202","messageId":"203","endLine":15,"endColumn":14},{"ruleId":"200","severity":1,"message":"232","line":1,"column":16,"nodeType":"202","messageId":"203","endLine":1,"endColumn":21},{"ruleId":"200","severity":1,"message":"233","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":31,"column":21,"nodeType":"236","messageId":"237","endLine":31,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":36,"column":21,"nodeType":"236","messageId":"237","endLine":36,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":93,"column":101,"nodeType":"240","messageId":"237","endLine":93,"endColumn":105},{"ruleId":"200","severity":1,"message":"241","line":18,"column":10,"nodeType":"202","messageId":"203","endLine":18,"endColumn":15},{"ruleId":"200","severity":1,"message":"242","line":18,"column":17,"nodeType":"202","messageId":"203","endLine":18,"endColumn":25},{"ruleId":"200","severity":1,"message":"243","line":20,"column":7,"nodeType":"202","messageId":"203","endLine":20,"endColumn":15},{"ruleId":"200","severity":1,"message":"220","line":50,"column":13,"nodeType":"202","messageId":"203","endLine":50,"endColumn":21},{"ruleId":"200","severity":1,"message":"217","line":2,"column":28,"nodeType":"202","messageId":"203","endLine":2,"endColumn":32},{"ruleId":"200","severity":1,"message":"220","line":36,"column":13,"nodeType":"202","messageId":"203","endLine":36,"endColumn":21},{"ruleId":"200","severity":1,"message":"220","line":35,"column":13,"nodeType":"202","messageId":"203","endLine":35,"endColumn":21},{"ruleId":"200","severity":1,"message":"219","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"244","line":2,"column":27,"nodeType":"202","messageId":"203","endLine":2,"endColumn":33},{"ruleId":"200","severity":1,"message":"245","line":2,"column":35,"nodeType":"202","messageId":"203","endLine":2,"endColumn":41},{"ruleId":"200","severity":1,"message":"246","line":2,"column":43,"nodeType":"202","messageId":"203","endLine":2,"endColumn":48},{"ruleId":"200","severity":1,"message":"205","line":3,"column":20,"nodeType":"202","messageId":"203","endLine":3,"endColumn":32},{"ruleId":"200","severity":1,"message":"247","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":13},{"ruleId":"200","severity":1,"message":"248","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":13},{"ruleId":"200","severity":1,"message":"249","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":13},{"ruleId":"200","severity":1,"message":"250","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":13},{"ruleId":"200","severity":1,"message":"251","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":11},{"ruleId":"200","severity":1,"message":"252","line":10,"column":26,"nodeType":"202","messageId":"203","endLine":10,"endColumn":39},{"ruleId":"200","severity":1,"message":"225","line":14,"column":10,"nodeType":"202","messageId":"203","endLine":14,"endColumn":15},{"ruleId":"200","severity":1,"message":"233","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":13},{"ruleId":"200","severity":1,"message":"218","line":3,"column":17,"nodeType":"202","messageId":"203","endLine":3,"endColumn":25},{"ruleId":"200","severity":1,"message":"219","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":36},{"ruleId":"200","severity":1,"message":"244","line":4,"column":27,"nodeType":"202","messageId":"203","endLine":4,"endColumn":33},{"ruleId":"200","severity":1,"message":"245","line":4,"column":35,"nodeType":"202","messageId":"203","endLine":4,"endColumn":41},{"ruleId":"200","severity":1,"message":"246","line":4,"column":43,"nodeType":"202","messageId":"203","endLine":4,"endColumn":48},{"ruleId":"200","severity":1,"message":"204","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":18},{"ruleId":"200","severity":1,"message":"205","line":5,"column":20,"nodeType":"202","messageId":"203","endLine":5,"endColumn":32},{"ruleId":"200","severity":1,"message":"206","line":5,"column":34,"nodeType":"202","messageId":"203","endLine":5,"endColumn":40},{"ruleId":"200","severity":1,"message":"207","line":5,"column":42,"nodeType":"202","messageId":"203","endLine":5,"endColumn":52},{"ruleId":"200","severity":1,"message":"208","line":5,"column":54,"nodeType":"202","messageId":"203","endLine":5,"endColumn":73},{"ruleId":"200","severity":1,"message":"247","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":13},{"ruleId":"200","severity":1,"message":"249","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":13},{"ruleId":"200","severity":1,"message":"250","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":13},{"ruleId":"200","severity":1,"message":"251","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":11},{"ruleId":"200","severity":1,"message":"253","line":18,"column":29,"nodeType":"202","messageId":"203","endLine":18,"endColumn":38},{"ruleId":"200","severity":1,"message":"241","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":15},{"ruleId":"200","severity":1,"message":"242","line":19,"column":17,"nodeType":"202","messageId":"203","endLine":19,"endColumn":25},{"ruleId":"200","severity":1,"message":"243","line":21,"column":7,"nodeType":"202","messageId":"203","endLine":21,"endColumn":15},{"ruleId":"213","severity":1,"message":"254","line":44,"column":6,"nodeType":"215","endLine":44,"endColumn":8,"suggestions":"255"},{"ruleId":"200","severity":1,"message":"220","line":51,"column":13,"nodeType":"202","messageId":"203","endLine":51,"endColumn":21},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AppTheme' is defined but never used.","'SplashScreen' is defined but never used.","'NavBar' is defined but never used.","'NavBarLink' is defined but never used.","'NavSearchSuggestion' is defined but never used.","'DataContext' is defined but never used.","'channels' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'splash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prueba'. Either include it or remove the dependency array.","ArrayExpression",["258"],"'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'response' is assigned a value but never used.","'tipoD' is assigned a value but never used.","'factura' is assigned a value but never used.","'setFactura' is assigned a value but never used.","'ColorPickerItem' is defined but never used.","'theme' is assigned a value but never used.","'color' is assigned a value but never used.","'NavPageContainerRight' is defined but never used.","'DataProvider' is defined but never used.","'MasterPage' is defined but never used.","'setColor' is assigned a value but never used.","'history' is assigned a value but never used.","'Image' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'flex'.","ObjectExpression","'label' is assigned a value but never used.","'setLabel' is assigned a value but never used.","'enumList' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Page0' is defined but never used.","'Page1' is defined but never used.","'Page2' is defined but never used.","'Login' is defined but never used.","'Img' is defined but never used.","'setThemeColor' is defined but never used.","'citiesRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.",["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [prueba]",{"range":"264","text":"265"},"Update the dependencies array to be: [getCities]",{"range":"266","text":"267"},[1740,1742],"[prueba]",[1065,1067],"[getCities]"]