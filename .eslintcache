[{"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\index.js":"1","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\App.js":"2","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\components\\MasterPage.js":"3","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\login\\index.js":"4","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\bitacora\\index.js":"5","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\equipos\\index.js":"6","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\home\\index.js":"7","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\perfil\\index.js":"8","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\categorias\\index.js":"9","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\asignar\\index.js":"10","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\empleados\\index.js":"11","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\sucursales\\index.js":"12","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\configuraciones\\index.js":"13","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\areas\\index.js":"14","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\grupos\\index.js":"15","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\ciudades\\index.js":"16","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\campos\\index.js":"17","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\components\\Navigation.js":"18","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\stores\\MasterStore.js":"19","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\stores\\AuthStore.js":"20","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\hooks\\useInput.js":"21"},{"size":367,"mtime":1646084382725,"results":"22","hashOfConfig":"23"},{"size":1962,"mtime":1646084382726,"results":"24","hashOfConfig":"23"},{"size":664,"mtime":1646084382729,"results":"25","hashOfConfig":"23"},{"size":3788,"mtime":1646084382744,"results":"26","hashOfConfig":"23"},{"size":558,"mtime":1646084382732,"results":"27","hashOfConfig":"23"},{"size":3495,"mtime":1646088464632,"results":"28","hashOfConfig":"23"},{"size":669,"mtime":1646084382743,"results":"29","hashOfConfig":"23"},{"size":552,"mtime":1646084382745,"results":"30","hashOfConfig":"23"},{"size":6764,"mtime":1646085714877,"results":"31","hashOfConfig":"23"},{"size":2568,"mtime":1646084382731,"results":"32","hashOfConfig":"23"},{"size":7723,"mtime":1646084382741,"results":"33","hashOfConfig":"23"},{"size":8083,"mtime":1646084382745,"results":"34","hashOfConfig":"23"},{"size":4052,"mtime":1646084382740,"results":"35","hashOfConfig":"23"},{"size":6504,"mtime":1646084382731,"results":"36","hashOfConfig":"23"},{"size":6510,"mtime":1646084382743,"results":"37","hashOfConfig":"23"},{"size":6470,"mtime":1646084382740,"results":"38","hashOfConfig":"23"},{"size":22828,"mtime":1646085548373,"results":"39","hashOfConfig":"23"},{"size":2028,"mtime":1646085764684,"results":"40","hashOfConfig":"23"},{"size":470,"mtime":1646084382750,"results":"41","hashOfConfig":"23"},{"size":1574,"mtime":1646084382750,"results":"42","hashOfConfig":"23"},{"size":1220,"mtime":1646084382730,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1bvg7s2",{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\index.js",[],["102","103"],"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\App.js",["104","105","106","107","108","109","110","111"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Switch, Route, Redirect, HashRouter as Router } from 'react-router-dom'\r\nimport { AppTheme, SplashScreen, NavBar, NavBarLink, NavSearchSuggestion } from 'react-windows-ui'\r\nimport Login from './pages/login'\r\nimport Asignar from './pages/asignar'\r\nimport Bitacora from './pages/bitacora'\r\nimport Categoria from './pages/categorias'\r\nimport Equipos from './pages/equipos'\r\nimport Perfil from './pages/perfil'\r\nimport Home from './pages/home'\r\nimport Empleado from './pages/empleados'\r\nimport Configuracion from './pages/configuraciones'\r\nimport Areas from './pages/areas'\r\nimport Sucursal from './pages/sucursales'\r\nimport Ciudad from './pages/ciudades'\r\nimport MasterPage from './components/MasterPage'\r\nimport Campos from './pages/campos'\r\nimport Grupo from './pages/grupos'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={Login}  exact />\r\n        <Route exact path=\"/react-windows-ui\">\r\n            <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/asignar\" component={Asignar} />\r\n        <Route path=\"/empleado\" component={Empleado} />\r\n        <Route path=\"/bitacora\" component={Bitacora} />\r\n        <Route path=\"/categoria\" component={Categoria} />\r\n        <Route path=\"/equipo\" component={Equipos} />\r\n        <Route path=\"/perfil\" component={Perfil} />\r\n        <Route path=\"/configuraciones\" component={Configuracion} />\r\n        <Route path=\"/ciudades\" component={Ciudad} />\r\n        <Route path=\"/master\" component={MasterPage} />\r\n        <Route path=\"/sucursal\" component={Sucursal} />\r\n        <Route path=\"/areas\" component={Areas} />\r\n        <Route path=\"/campos\" component={Campos} />\r\n        <Route path=\"/grupos\" component={Grupo} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n    \r\nexport default App;","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\components\\MasterPage.js",["112","113","114"],"import { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../components/Navigation'\r\nimport { useMasterState } from '../stores/MasterStore'\r\n\r\nconst MasterPage = () => {\r\n\r\n    const masterState = useMasterState();\r\n\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n            <h1>{masterState.get().name}</h1>\r\n            <p>{masterState.get().name}</p>\r\n            <div className=\"app-hr\"></div>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MasterPage","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\login\\index.js",["115","116","117","118","119"],"import React, {Image, useState, useEffect} from 'react'\r\nimport login from \"../../assets/login.jpg\"\r\nimport { AvatarView, InputText, Button, SplashScreen } from 'react-windows-ui'\r\nimport user from \"../../assets/user.png\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useAuthState, loginUser } from '../../stores/AuthStore'\r\nimport { Alert } from 'react-windows-ui'\r\n\r\nconst Login = () => {\r\n\r\n    const [splash, setSplash] = useState(true);\r\n    const history = useHistory();\r\n    const authState = useAuthState();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [message, setMessage] = useState(\"Algo salió mal, inténtalo de nuevo\")\r\n\r\n    const [validate, setValidate] = useState(false);\r\n\r\n    useEffect(() => {\r\n     setSplash(false);\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n\r\n    }, [])\r\n\r\n    const handleLogin = async() => {\r\n        if(username == \"\"){\r\n           setValidate(true)\r\n           setMessage(\"El nombre de usuario no puede estar vacío\")\r\n           return\r\n        }\r\n        if(password == \"\"){\r\n            setValidate(true)\r\n            setMessage(\"La contraseña no puede estar vacía\")\r\n            return\r\n        }\r\n\r\n       await loginUser(username, password);\r\n       if(authState.get().isLoggedIn){\r\n            history.push(\"/home\")\r\n            setValidate(false)\r\n            return\r\n       }else{\r\n            setValidate(true)\r\n            setMessage(authState.me.get().message)\r\n            return\r\n       }\r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <SplashScreen\r\n            //duration={1000} // adjust how long it takes after render \r\n            isVisible={splash}\r\n            title={\"Kassa\"}\r\n            />\r\n        <div style={{backgroundImage:`url(${login})`, height: '100vh', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundSize: 'cover', flex:1, display: 'flex', flexDirection: 'column'}}>\r\n            <div style={{display: 'flex', flex: 1, alignItems: 'flex-end', justifyContent: 'center'}}>\r\n            {\r\n\r\n            \r\n            <Alert\r\n                isVisible={validate}\r\n                title=\"Atención\"\r\n                message={message}\r\n                onBackdropPress={()=>{setValidate(false)}}>\r\n                <button onClick={()=>{setValidate(false)}}>OK</button>\r\n            </Alert>\r\n        }\r\n            <AvatarView\r\n                src={user}\r\n                isLoading={false}\r\n                size=\"medium\"\r\n                showDropShadow={false}\r\n                />\r\n            </div>\r\n            <div style={{flex:2, display:'flex', alignItems: 'flex-start', justifyContent:'center', flex:2}}>\r\n            <div style={{display:'block', textAlign: 'center'}}>\r\n            <h2 style={{color: 'white'}}>Iniciar Sesión</h2>\r\n            <InputText\r\n                placeholder=\"Nombre de Usuario\"\r\n                tooltip=\"Ingrese nombre de usuario\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            <InputText\r\n                type=\"password\"\r\n                placeholder=\"Ingrese su contraseña\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                /> \r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            <Button\r\n                value=\"Iniciar Sesión\"\r\n                isLoading={false}\r\n                onClick={handleLogin}\r\n                tooltip=\"Iniciar Sesión\"\r\n                />\r\n            </div>\r\n            \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\bitacora\\index.js",["120","121"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nconst Bitacora = () => {\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n\r\n            <h1>Bitacora</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Bitacora","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\equipos\\index.js",["122","123","124","125","126","127"],"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\home\\index.js",["128","129","130","131","132"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { AppTheme } from 'react-windows-ui'\r\nimport { ColorPickerItem } from 'react-windows-ui'\r\n\r\nconst Home = () => {\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n            \r\n            <h1>Home</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\perfil\\index.js",["133","134"],"\r\nimport { NavPageContainer,Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nconst Perfil = () => {\r\n    return (\r\n      <>\r\n        <NavigationWindow/>\r\n            <NavPageContainer\r\n            hasPadding={true}\r\n            animateTransition={true}>\r\n\r\n            <h1>Perfil</h1>\r\n            <p>Start adding your fantastic ui here.</p>\r\n            <Link>Components here</Link>\r\n        </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Perfil","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\categorias\\index.js",["135","136","137"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport \"../categorias/index.css\"\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\nimport { useInput } from '../../hooks/useInput'\r\n\r\nconst Categoria = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n  const [ejemmplo, ejemploInput,  resetInput] = useInput({type: \"number\", placeholder:\"Texto\", tooltip: \"Este es un ejemplo\", min: 0})\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Categoria',\r\n      field: 'categoria'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"category\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"DescripcionCategoria\": categoria })\r\n      })\r\n      setCategoria(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:9000/category\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdCategoria,\r\n          categoria: ele.DescripcionCategoria ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Entidades</h1>\r\n              <p>Añada, modifique o elimine sus entidades</p>\r\n              {ejemploInput}\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Entidades\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Categoría</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de la categoria: </p>\r\n                    <input\r\n                      value={categoria}\r\n                      onChange={e => setCategoria(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categoria","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\asignar\\index.js",["138","139","140"],"\r\nimport { NavPageContainer, Link, InputText } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { useInput } from '../../hooks/useInput'\r\nimport { useState as useStateRef } from '@hookstate/core'\r\n\r\n\r\nconst Asignar = () => {\r\n\r\n  const [controls, setControls] = useState([]);\r\n  const [loading, setLoading] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    getControls()\r\n  }, [])\r\n\r\n  const getControls = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:9000/control\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          label: ele.CaracteristicaDescripcion,\r\n          type: ele.DescripcionTipo,\r\n          placeholder: \"Ingrese \" + ele.CaracteristicaDescripcion,\r\n          tooltip: ele.CaracteristicaDescripcion\r\n        }\r\n        arre.push(obj)\r\n      })\r\n      console.log(arre)\r\n      setControls(arre)\r\n      setLoading(false)\r\n\r\n      console.log(controls)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Asignar</h1>\r\n              <p>Start adding your fantastic ui here.</p>\r\n              <Link>Components here</Link>\r\n              {\r\n                controls.map((item) => {\r\n                  //  const [{item.CaracteristicaDescripcion},{ item.CaracteristicaDescripcion+\"Input\"},  {resetInput}] = useInput({type: \"number\", placeholder:\"Texto\", tooltip: \"Este es un ejemplo\", min: 0})\r\n                  return (<>\r\n                    <div style={{ marginTop: '30px', alignItems: 'center', width: '100%' }}>\r\n                      <p style={{ marginRight: '10px' }}>{item.label}:</p>\r\n                      <InputText\r\n                        placeholder={item.placeholder}\r\n                        tooltip={item.tooltip}\r\n                        //value={modelo}\r\n                        //onChange={e => setModelo(e.target.value)}\r\n                        type={item.type}\r\n                      />\r\n                    </div>\r\n                  </>)\r\n                })\r\n              }\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Asignar","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\empleados\\index.js",["141","142","143","144"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useEffect, useState } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst Empleado = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [empleadoName, setEmpleadoName] = useState(\"\")\r\n  const [selectedArea, setSelectedArea] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n  const [areas, setAreas] = useState();\r\n  const [label, setLabel] = useState();\r\n\r\n  let enumList = []\r\n\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Empleado',\r\n      field: 'empleado'\r\n    },\r\n    {\r\n      title: 'Area',\r\n      field: 'area'\r\n    }\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n    getAreas()\r\n  }, [])\r\n\r\n\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"employee\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"NombreEmpleado\": empleadoName, \"EstadoEmpleado\": 1, \"IdArea\": selectedArea })\r\n      })\r\n      console.log(empleadoName)\r\n      console.log(selectedArea)\r\n      setEmpleadoName(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"El empleado se guardó exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar el empleado\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"employee\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdEmpleado,\r\n          empleado: ele.NombreEmpleado,\r\n          area: ele.DescripcionArea\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n     // setLoading(true)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getAreas = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"area\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          value: ele.IdArea,\r\n          label: ele.DescripcionArea\r\n        }\r\n        arre.push(obj)\r\n        //enumList.push(obj.label)\r\n        //setLabel([...label, obj.label])\r\n        console.log(obj)\r\n      })\r\n      setAreas(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Empleados</h1>\r\n              <p>Añada, modifique o elimine registros de empleados.</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nuevo Empleado</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de empleado: </p>\r\n                    <input\r\n                      value={empleadoName}\r\n                      onChange={e => setEmpleadoName(e.target.value)}\r\n                      style={{ width: '70%', height: '30px' }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <p>Nombre de la ciudad: </p>\r\n                    <Select\r\n                      options={areas}\r\n                      onChange = {(e)=> setSelectedArea(e.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      style={{ marginTop: '30px', marginLeft: '0px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Empleado","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\sucursales\\index.js",["145","146","147","148","149","150"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\nimport useState from 'react-usestateref'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst Sucursal = () => {\r\n\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [sucursalName, setSucursalName] = React.useState(\"\")\r\n  const [selectedCity, setSelectedCity] = React.useState(\"\")\r\n  const [listCat, setlistCat] = React.useState(\"\")\r\n  const [loading, setLoading] = React.useState(true)\r\n  const [cities, setCities, citiesRef] = useState();\r\n  const [label, setLabel] = useState();\r\n\r\n  let enumList = []\r\n\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Sucursal',\r\n      field: 'sucursal'\r\n    },\r\n    {\r\n      title: 'Ciudad',\r\n      field: 'ciudad'\r\n    }\r\n\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n    getCities()\r\n  }, [])\r\n\r\n\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"sucursales\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"NombreSucursal\": sucursalName, \"IdCiudad\": selectedCity })\r\n      })\r\n      console.log(sucursalName)\r\n      console.log(selectedCity)\r\n      setSucursalName(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"sucursales\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdSucursal,\r\n          ciudad: ele.NombreCiudad ?? \"No hay\",\r\n          sucursal: ele.NombreSucursal\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(true)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getCities = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"city\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          value: ele.IdCiudad,\r\n          label: ele.NombreCiudad\r\n        }\r\n        arre.push(obj)\r\n        //enumList.push(obj.label)\r\n        //setLabel([...label, obj.label])\r\n        console.log(obj)\r\n      })\r\n      setCities(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Sucursales</h1>\r\n              <p>Añada, modifique o elimine sucursales</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Sucursal</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de sucursal: </p>\r\n                    <input\r\n                      value={sucursalName}\r\n                      onChange={e => setSucursalName(e.target.value)}\r\n                      style={{ width: '70%', height: '30px' }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <p>Nombre de la ciudad: </p>\r\n                    <Select\r\n                      options={cities}\r\n                      theme={(theme)=> ({\r\n                        ...theme,\r\n                        colors: {\r\n                          ...theme.colors,\r\n                          text: 'white',\r\n                          primary: 'red'\r\n                        }\r\n                      })}\r\n                      onChange = {(e)=> setSelectedCity(e.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      style={{ marginTop: '30px', marginLeft: '0px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sucursal","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\configuraciones\\index.js",["151","152","153","154","155","156"],"\r\nimport { NavPageContainer, NavPageContainerRight, ColorPickerItem, ColorPickerPalette, LinkCompound } from 'react-windows-ui'\r\nimport React, { useEffect, createContext } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nimport MasterPage from '../../components/MasterPage'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useMasterState, setThemeColor } from '../../stores/MasterStore'\r\n\r\n\r\nconst Configuracion = () => {\r\n\r\n\r\n  const history = useHistory();\r\n  const masterState = useMasterState();\r\n\r\n\r\n  return (\r\n    <>\r\n      <NavigationWindow />\r\n      <NavPageContainer\r\n        hasPadding={true}\r\n        animateTransition={true}>\r\n\r\n        <h1>Configuraciones del Sistema</h1>\r\n        <p>Configure sus preferencias del sistema.</p>\r\n        <div className=\"app-hr\"></div>\r\n        <div className=\"home-color-picker\">\r\n          <h2>Color del sistema</h2>\r\n          <ColorPickerItem\r\n            //defaultChecked\r\n            name=\"1\"\r\n            color=\"#0078D7\"\r\n            onChange={(color) => setThemeColor(color.target.value)} />\r\n          <ColorPickerItem\r\n            name=\"1\"\r\n            color=\"#6632a8\"\r\n            onChange={(color) => setThemeColor(color.target.value)} />\r\n          <ColorPickerItem\r\n            name=\"1\"\r\n            color=\"#881798\"\r\n            onChange={(color) => setThemeColor(color.target.value)} />\r\n\r\n          <ColorPickerItem\r\n            name=\"1\"\r\n            color=\"#00B294\"\r\n            onChange={(color) => setThemeColor(color.target.value)} />\r\n          <ColorPickerItem\r\n            name=\"1\"\r\n            color=\"#69797E\"\r\n            onChange={(color) => setThemeColor(color.target.value)} />\r\n          <ColorPickerPalette\r\n            name=\"1\"\r\n            color=\"#5ebd06\"\r\n            onChange={(color) => setThemeColor(color.target.value)} />\r\n        </div>\r\n        <div>\r\n          <h2>Más configuraciones</h2>\r\n          <LinkCompound\r\n            style={{ margin: '5px 5px 0 0', width: 300 }}\r\n            to=\"/sucursal\"\r\n            title=\"Sucursales\"\r\n            subtitle=\"Administrar registros de sucursales\"\r\n            icon={<i className=\"icons10-location\"></i>}\r\n            focused={true}\r\n            margin=\"5px 5px 0 0\"\r\n\r\n          />\r\n\r\n          <LinkCompound\r\n            style={{ margin: '5px 5px 0 0', width: 300 }}\r\n            to=\"/ciudades\"\r\n            title=\"Ciudades\"\r\n            subtitle=\"Administrar registros de ciudades\"\r\n            icon={<i className=\"icons10-location-point\"></i>}\r\n            focused={true} />\r\n\r\n          <LinkCompound\r\n            style={{ margin: '5px 5px 0 0', width: 300 }}\r\n            to=\"/areas\"\r\n            title=\"Áreas\"\r\n            subtitle=\"Administrar áreas y departamentos\"\r\n            icon={<i className=\"icons10-fax\"></i>}\r\n            focused={true}\r\n            onClick={() => {\r\n              masterState.set({\r\n                name: \"Area\",\r\n                description: \"Description\"\r\n              })\r\n            }}\r\n          >\r\n\r\n          </LinkCompound>\r\n\r\n          <LinkCompound\r\n            to=\"/ContactsLayout\"\r\n            title=\"Mantenimientos\"\r\n            subtitle=\"Registrar mantenimientos de equipos\"\r\n            icon={<i className=\"icons10-services\"></i>}\r\n            focused={true}\r\n            style={{ margin: '5px 5px 0 0', width: 300 }} />\r\n\r\n          <LinkCompound\r\n            to=\"/campos\"\r\n            title=\"Campos\"\r\n            subtitle=\"Añade una nueva entidad al sistema\"\r\n            icon={<i className=\"icons10-puzzle\"></i>}\r\n            focused={true}\r\n            style={{ margin: '5px 5px 0 0', width: 300 }} />\r\n\r\n          <LinkCompound\r\n            to=\"/grupos\"\r\n            title=\"Grupos\"\r\n            subtitle=\"Añade nuevo grupo de productos\"\r\n            icon={<i className=\"icons10-file-explorer\"></i>}\r\n            focused={true}\r\n            style={{ margin: '5px 5px 0 0', width: 300 }} />\r\n        </div>\r\n      </NavPageContainer>\r\n    </>\r\n  );\r\n}\r\nexport default Configuracion;","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\areas\\index.js",["157"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport \"../categorias/index.css\"\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst Areas = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Área',\r\n      field: 'area'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"area\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"DescripcionArea\": categoria })\r\n      })\r\n      setCategoria(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"El área se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar el área\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:9000/area\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdArea,\r\n          area: ele.DescripcionArea ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Áreas</h1>\r\n              <p>Ingrese y administre los registros de las áreas de la empresa</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva área</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre del área: </p>\r\n                    <input\r\n                      value={categoria}\r\n                      onChange={e => setCategoria(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Areas","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\grupos\\index.js",["158"],"\r\nimport { NavPageContainer } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\n\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst Grupo = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Categoria',\r\n      field: 'categoria'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"groups\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"DescripcionGrupo\": categoria })\r\n      })\r\n      setCategoria(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"groups\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdCategoria,\r\n          categoria: ele.DescripcionGrupo ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Grupos</h1>\r\n              <p>Añada, modifique o elimine grupos de productos</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Categoría</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de la categoria: </p>\r\n                    <input\r\n                      value={categoria}\r\n                      onChange={e => setCategoria(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Grupo","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\ciudades\\index.js",["159","160"],"\r\nimport { NavPageContainer, Link } from 'react-windows-ui'\r\nimport React, { useState, useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport { Dialog, Button } from 'react-windows-ui'\r\nimport MaterialTable from 'material-table'\r\n\r\nconst Ciudad = () => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [ciudad, setCiudad] = useState(\"\")\r\n  const [listCat, setlistCat] = useState(\"\")\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const columnas = [\r\n    {\r\n      title: 'Id',\r\n      field: 'id',\r\n      hidden: true\r\n    },\r\n    {\r\n      title: 'Ciudad',\r\n      field: 'ciudad'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n  }, [])\r\n\r\n\r\n\r\n  const addItem = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"city\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"NombreCiudad\": ciudad })\r\n      })\r\n      setCiudad(\"\")\r\n      await getItems()\r\n      setShowModal(false)\r\n      setLoading(false)\r\n      alert(\"La categoria se guardo exitosamente\")\r\n    } catch (error) {\r\n      alert(\"Ocurrio un error al guardar la categoria\")\r\n    }\r\n  }\r\n\r\n  const getItems = async () => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_HOME + \"city\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      const result = await response.json()\r\n      var arre = []\r\n      result.forEach(ele => {\r\n        var obj = {\r\n          id: ele.IdCiudad,\r\n          ciudad: ele.NombreCiudad ?? \"No hay\"\r\n        }\r\n        arre.push(obj)\r\n        console.log(obj)\r\n      })\r\n      setlistCat(arre)\r\n      setLoading(false)\r\n      //console.log(result)\r\n      //setlistCat(response)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <></> :\r\n          <>\r\n            <NavigationWindow />\r\n            <NavPageContainer\r\n              hasPadding={true}\r\n              animateTransition={true}>\r\n\r\n              <h1>Ciudades</h1>\r\n              <p>Añada, modifique o elimine registro de ciudades</p>\r\n              <div className=\"app-hr\"></div>\r\n\r\n              <div style={{ margin: '20px 0' }}>\r\n                <Button\r\n                  style={{ marginLeft: '30px' }}\r\n                  value=\"Nueva\"\r\n                  onClick={() => setShowModal(true)}\r\n                  icon={<i className=\"icons10-plus\"></i>} />\r\n              </div>\r\n              <div style={{ width: '100%' }}>\r\n                {/*            <TableView\r\n              columns={[\r\n                { 'title':'Categoría', 'showSortIcon': true },\r\n                { 'title':'Acciones','showSortIcon': false, 'sortable': false },\r\n              ]}\r\n              rows={listCat}\r\n              style= {{width: '100%', backgroundColor: 'blue'}}\r\n            /> */}\r\n                <MaterialTable\r\n                  columns={columnas}\r\n                  data={listCat}\r\n                  title=\"Categorias\"\r\n                  style={{ boxShadow: 'none', marginRight: '30px' }}\r\n                  localization={{\r\n                    header: {\r\n                      actions: 'Acciones'\r\n                    },\r\n                    pagination: {\r\n                      labelDisplayedRows: '{from}-{to} de {count}',\r\n                      labelRowsSelect: 'filas',\r\n                      labelRowsPerPage: 'Filas por página',\r\n                      firstAriaLabel: 'Primera página',\r\n                      firstTooltip: 'Primera página',\r\n                      previousAriaLabel: 'Página anterior',\r\n                      previousTooltip: 'Página anterior',\r\n                      nextAriaLabel: 'Siguiente página',\r\n                      nextTooltip: 'Siguiente página',\r\n                      lastAriaLabel: 'Última página',\r\n                      lastTooltip: 'Última página'\r\n                    },\r\n                    toolbar: {\r\n                      nRowsSelected: '{0} fila(s) seleccionada(s)',\r\n                      searchTooltip: 'Buscar...',\r\n                      searchPlaceholder: 'Buscar...',\r\n                      exportTitle: \"Categrorias\",\r\n                      exportPDFName: 'Exportar como PDF',\r\n                      exportCSVName: 'Exportar como CSV'\r\n                    },\r\n                    body: {\r\n                      emptyDataSourceMessage: 'No hay datos para mostrar',\r\n                      filterRow: {\r\n                        searchTooltip: 'Buscar...'\r\n                      }\r\n                    }\r\n                  }}\r\n                  options={{\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: true,\r\n                    draggable: true\r\n                  }}\r\n                  actions={\r\n                    [\r\n                      {\r\n                        icon: 'edit',\r\n                        tooltip: 'Editar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      },\r\n                      {\r\n                        icon: 'delete',\r\n                        tooltip: 'Eliminar categoria',\r\n                        onClick: (event, rowData) => alert(\"Has presionado la categoria: \" + rowData.categoria)\r\n                      }\r\n                    ]\r\n                  }\r\n\r\n                />\r\n              </div>\r\n              <Dialog\r\n                isVisible={showModal}\r\n                onBackdropPress={() => setShowModal(false)}\r\n                showDropShadow={true}>\r\n                <div style={{ padding: '10px' }}>\r\n                  <h3>Nueva Ciudad</h3>\r\n                  <div className=\"app-hr\"></div>\r\n                  <div >\r\n                    <p>Nombre de la ciudad: </p>\r\n                    <input\r\n                      value={ciudad}\r\n                      onChange={e => setCiudad(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      style={{ marginLeft: '30px' }}\r\n                      value=\"Guardar\"\r\n                      onClick={addItem}\r\n                      icon={<i className=\"icons10-save\"></i>} />\r\n                  </div>\r\n                </div>\r\n              </Dialog>\r\n            </NavPageContainer>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Ciudad","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\pages\\campos\\index.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"\r\nimport { NavPageContainer, LinkCompound, View, ButtonIcon, InputText, Switch, Dialog, Link, Button } from 'react-windows-ui'\r\nimport React, { useEffect } from 'react'\r\nimport NavigationWindow from '../../components/Navigation'\r\nimport \"./styles.css\"\r\nimport { useMasterState } from '../../stores/MasterStore'\r\nimport { useAuthState } from '../../stores/AuthStore'\r\nimport Select from 'react-select'\r\nimport useState from 'react-usestateref'\r\n\r\nconst Campos = () => {\r\n\r\n    const MAX_FIELDS = 20\r\n    const ITEMS_PER_FIELDS = 5\r\n    const initialArr = new Array(MAX_FIELDS);\r\n    for (var i = 0; i < MAX_FIELDS; i++) {\r\n        initialArr[i] = new Array(ITEMS_PER_FIELDS);\r\n    }\r\n\r\n    const visibleDialogs = new Array(MAX_FIELDS).fill(false);\r\n\r\n\r\n    const [types, setTypes] = React.useState([])\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [campos, setCampos] = React.useState([])\r\n    const [dialog, setDialog] = React.useState(visibleDialogs)\r\n    const [propsCampos, setPropsCampos] = React.useState(initialArr)\r\n    const [itemModal, setItemModal] = React.useState()\r\n    const [indexModal, setIndexModal] = React.useState()\r\n    const [categorias, setCategorias] = React.useState()\r\n    const [entityName, setEntityName] = React.useState()\r\n    const [insertedId, setInsertedId, insertedIdRef] = useState()\r\n    const [allCampos, setAllCampos] = React.useState()\r\n    const [selectedCategory, setSelectedCategory] = React.useState()\r\n    const [flag, setFlag] = React.useState(false)\r\n    const masterState = useMasterState()\r\n    const authState = useAuthState()\r\n\r\n    //Maneja el cambio de los inputs en cada uno de los campos agregados\r\n    const onChangeHandler = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        let key = event.target.getAttribute('a_key');\r\n        //console.log(name + \"-\"+value+\"-\"+key)\r\n        let allData = [...propsCampos];\r\n        allData[name][key] = value;\r\n        //allData[name].splice(key, 0, value)\r\n        setPropsCampos(allData)\r\n        //console.log(propsCampos)\r\n    }\r\n\r\n    // Obtiene todos los tipos de campos existentes en la base de datos\r\n    const getAllTypes = async () => {\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_HOME + \"control/types\", {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            const result = await response.json()\r\n            var arre = []\r\n            result.forEach(ele => {\r\n                var obj = {\r\n                    id: ele.IdTipoCampo,\r\n                    type: ele.DescripcionTipo,\r\n                    display: ele.DisplayText,\r\n                    icon: ele.Icono\r\n                }\r\n                arre.push(obj)\r\n                console.log(obj)\r\n            })\r\n            setTypes(arre)\r\n            // setLoading(false)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    // Obtiene un listado con los grupos de productos existentes\r\n    const getAllCategories = async () => {\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_HOME + \"groups\", {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            const result = await response.json()\r\n            var arre = []\r\n            result.forEach(ele => {\r\n                var obj = {\r\n                    value: ele.IdGrupo,\r\n                    label: ele.DescripcionGrupo\r\n                }\r\n                arre.push(obj)\r\n                console.log(obj)\r\n            })\r\n            setCategorias(arre)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllTypes()\r\n        getAllCategories()\r\n    }, [])\r\n\r\n    // Controla la función para añadir un nuevo campo a la entidad\r\n    const addItemCampo = (campoObj) => {\r\n        let oldArray = [...campos]\r\n        oldArray.push(campoObj);\r\n        setCampos([...campos, campoObj])\r\n        let camposP = [...propsCampos];\r\n        let lastIndex = campos.length;\r\n        camposP[lastIndex][4] = campoObj.id;\r\n        setPropsCampos(camposP)\r\n    }\r\n\r\n    // Desplega el modal con la previsualización de cada uno de los controles añadidos\r\n    const handleToggleVisible = (item, indice) => {\r\n        setFlag(true)\r\n        setItemModal(item)\r\n        setIndexModal(indice)\r\n    }\r\n\r\n    // Controla los valores del Toggle de requerido\r\n    const handleToggleSwitch = (indice) => {\r\n        let value = propsCampos[indice]?.[2] ?? false;\r\n        let allData = [...propsCampos];\r\n        if (value) {\r\n            allData[indice][2] = false;\r\n        } else {\r\n            allData[indice][2] = true;\r\n        }\r\n        setPropsCampos(allData);\r\n    }\r\n\r\n    // Muestra el control indicado en la previsualización del control \r\n    const showPrevisualization = (item, index) => {\r\n        if (item?.type != undefined) {\r\n            switch (item.type) {\r\n                case 'text': case 'date':\r\n                    return (<InputText type={item.type} placeholder={propsCampos[index][0]} tooltip={propsCampos[index][1]} />)\r\n                case 'number':\r\n                    return (<InputText type={item.type} placeholder={propsCampos[index][0]} tooltip={propsCampos[index][1]} min={0} />)\r\n                case 'file':\r\n                    return (\r\n                        <>\r\n                            <label htmlFor=\"filePicker\" style={{ background: \"lightgray\", padding: \"5px 10px\" }}>\r\n                                {propsCampos[index][0] ?? \"Escoge un archivo\"}\r\n                            </label>\r\n                            <input id=\"filePicker\" style={{ visibility: \"hidden\" }} type={\"file\"} />\r\n                        </>)\r\n                case 'select':\r\n                    var data = propsCampos[index]?.[3] ?? \"Item1 | Item2 | Item3\"\r\n                    var arrayData = data.split('|')\r\n                    var objData = []\r\n                    arrayData.forEach((ele, indice) => {\r\n                        let obj = {\r\n                            value: indice,\r\n                            label: ele\r\n                        }\r\n                        objData.push(obj);\r\n                    })\r\n                    return (\r\n                        <Select\r\n                            //value={}\r\n                            options={objData}\r\n                            defaultValue={objData[0]}\r\n                        />\r\n\r\n                    )\r\n                case 'textarea':\r\n                    return (\r\n                        <textarea className='app-textarea' style={{ resize: 'none', width: '350px', height: '150px' }} placeholder={propsCampos[index][0]} tooltip={propsCampos[index][1]} />\r\n                    )\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    // Quita el item del campo \r\n    const deleteCampo = (index) => {\r\n        var datosAgregados = [...campos];\r\n        datosAgregados.splice(index, 1)\r\n        setCampos(datosAgregados);\r\n    }\r\n\r\n    // Controla la función de subir o bajar de nivel \r\n    const changeLevelCampo = (index, move) => {\r\n        if ((index == 0 && move == -1) || (index == campos.length - 1 && move == 1)) return;\r\n        let newIndex = index + move;\r\n        let camposArray = [...campos]\r\n        let objIndex = camposArray[index];\r\n        let objMoved = camposArray[newIndex];\r\n        camposArray.splice(index, 1, objMoved);\r\n        camposArray.splice(newIndex, 1, objIndex)\r\n        setCampos(camposArray)\r\n    }\r\n\r\n    // Guarda el nombre de la entidad\r\n    const handleSaveEntity = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const response = await fetch(process.env.REACT_APP_HOME + \"category\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ \"DescripcionCategoria\": entityName, \"EstadoCategoria\": 1, \"UsuarioCreo\": authState.me.get().username, \"IdGrupo\": selectedCategory })\r\n            })\r\n            /* setEntityName(\"\")\r\n            await getItems()\r\n            setShowModal(false) */\r\n            let res = await response.json();\r\n            console.log(res)\r\n            setInsertedId(res.insertId)\r\n            setLoading(false)\r\n            alert(\"El empleado se guardó exitosamente\")\r\n        } catch (error) {\r\n            alert(\"Ocurrio un error al guardar el empleado\" + error)\r\n        }\r\n    }\r\n\r\n    const validateAllFieldsHasName = () => {\r\n        let camposArrayAux = [...propsCampos]\r\n        let arrayFiltered = []\r\n        let flag = false;\r\n        camposArrayAux.map((el, index) => {\r\n            if (el[4]) arrayFiltered.push(el)\r\n            //console.log(el)\r\n        })\r\n\r\n        arrayFiltered.map((item) => {\r\n            if (!item[1]) flag = true\r\n        })\r\n        return flag;\r\n    }\r\n\r\n    const handleSaveAllCampos = async () => {\r\n        let camposArrayAux = [...propsCampos]\r\n        let arrayFiltered = []\r\n        camposArrayAux.map((el, index) => {\r\n            if (el[4]) arrayFiltered.push(el)\r\n            //console.log(el)\r\n        })\r\n        //console.log(arrayFiltered)\r\n        setAllCampos(arrayFiltered);\r\n\r\n        arrayFiltered.map((item, index) => {\r\n            try {\r\n                //setLoading(true)\r\n                const response = fetch(process.env.REACT_APP_HOME + \"control\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ \"IdCategoria\": insertedIdRef.current, \"CaracteristicaDescripcion\": item[1], \"Nivel\": index, \"Requerido\": Number(item[2]) ? 1 : 0, \"Placeholder\": item[0], \"Tooltip\": item[1], \"UsuarioCreo\": authState.me.get().username, \"CaracteristicaTipo\": item[4] })\r\n                }).then((res) => {\r\n                    console.log(\"Campo añadido\")\r\n                }).catch((err) => {\r\n                    console.log(\"Algo salió mal al agregar el campo\" + err)\r\n                })\r\n\r\n                // let obj = { \"IdCategoria\": selectedCategory || 1, \"CaracteristicaDescripcion\": item[1], \"Nivel\": index, \"Requerido\": item[2], \"Placeholder\": item[0], \"Tooltip\": item[1], \"UsuarioCreo\": authState.me.get().username, \"CaracteristicaTipo\": item[4] }\r\n                //console.log(obj)\r\n            } catch (error) {\r\n                alert(error)\r\n            }\r\n        })\r\n        // alert(\"Campos añadidos exitosamente\")\r\n\r\n    }\r\n\r\n    const cleanFields = () => {\r\n        setEntityName(\"\")\r\n        setPropsCampos(initialArr)\r\n        setCampos([])\r\n    }\r\n\r\n    const saveAllFields = async () => {\r\n        if (!campos[0]) {\r\n            return alert(\"Debes añadir los campos a tu entidad antes de proseguir\")\r\n        } else {\r\n            if (validateAllFieldsHasName()) {\r\n                return alert(\"El campo del nombre es obligatorio\")\r\n            } else {\r\n                if (!selectedCategory) {\r\n                    return alert(\"Debes seleccionar un grupo de categoría para tu identidad\")\r\n                } else {\r\n                    await handleSaveEntity();\r\n                    await handleSaveAllCampos();\r\n                    cleanFields();\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <></> : <>\r\n                    <NavigationWindow />\r\n                    <NavPageContainer\r\n                        hasPadding={true}\r\n                        animateTransition={true}>\r\n                        <h1>Entidades</h1>\r\n                        <p>Añade campos y característica para tus entidades.</p>\r\n                        <div className=\"app-hr\"></div>\r\n                        <div style={{ display: 'flex', alignItems: 'center', backgroundColor: '#eee', height: '60px', flexDirection: 'row', marginRight: '50px' }}>\r\n                            <div>\r\n                                <label style={{ margin: ' 0 20px' }}>Nombre de la entidad:</label>\r\n                                <InputText placeholder='Nueva entidad' tooltip='Nueva entidad' onChange={(e) => setEntityName(e.target.value)} />\r\n                            </div>\r\n                            <div>\r\n                                <label style={{ margin: ' 0 20px' }}>Categoría:</label>\r\n                            </div>\r\n                            <div style={{ width: '300px' }}>\r\n                                <Select options={categorias} placeholder=\"Selecciona una categoría\" onChange={(e) => setSelectedCategory(e.value)} styles={{ width: '250px' }} />\r\n                            </div>\r\n                            <div style={{ marginLeft: '20px' }}>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    value=\"Guardar entidad\"\r\n                                    //onClick={handleSaveEntity}\r\n                                    onClick={saveAllFields}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div style={{ display: 'flex', height: '100%', padding: '15px', gap: '5px' }}>\r\n                            <div style={{ width: '30%' }}>\r\n                                {\r\n                                    types.map((item, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <LinkCompound\r\n                                                    to=\"#\"\r\n                                                    focused\r\n                                                    title={item.display}\r\n                                                    onClick={() => addItemCampo(item)}\r\n                                                    style={{ width: '100%', margin: '10px 0px' }}\r\n                                                    icon={<i className={item.icon}></i>}\r\n                                                />\r\n\r\n                                            </>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div style={{ width: '70%' }}>\r\n                                {\r\n                                    campos.map((item, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <View\r\n                                                    isVisible={true}\r\n                                                    zIndex={1}\r\n                                                    animationType=\"fade\"\r\n                                                    style={{ height: 180, width: '95%', margin: '10px 0px', backgroundColor: '#EEE', padding: '10px', position: 'relative' }}>\r\n                                                    <div>\r\n                                                        <div style={{ width: \"100%\" }}>\r\n                                                            <span style={{ fontWeight: 'bold' }}>Campo de tipo {item.display.toLowerCase()}</span>\r\n                                                            <ButtonIcon\r\n                                                                icon={<i className=\"icons10-cross\" style={{ color: masterState.get().color }}></i>}\r\n                                                                onClick={() => deleteCampo(index)}\r\n                                                                tooltip=\"Eliminar\"\r\n                                                            />\r\n                                                            <ButtonIcon\r\n                                                                icon={<i className=\"icons10-eye\" style={{ color: masterState.get().color }}></i>}\r\n                                                                onClick={() => handleToggleVisible(item, index)}\r\n                                                                tooltip=\"Previsualizar\"\r\n                                                            />\r\n                                                            <ButtonIcon\r\n                                                                icon={<i className=\"icons10-angle-down\" style={{ color: masterState.get().color }}></i>}\r\n                                                                onClick={() => changeLevelCampo(index, 1)}\r\n                                                                tooltip=\"Bajar nivel\"\r\n                                                            />\r\n                                                            <ButtonIcon\r\n                                                                icon={<i className=\"icons10-angle-up\" style={{ color: masterState.get().color }}></i>}\r\n                                                                onClick={() => changeLevelCampo(index, -1)}\r\n                                                                tooltip=\"Subir nivel\"\r\n                                                            />\r\n\r\n                                                            <br />\r\n                                                        </div>\r\n                                                        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap', justifyContent: 'flex-start', alignItems: 'stretch', alignItems: 'flex-start' }}>\r\n                                                            <div style={{ flex: '1 0 auto', alignSelf: 'auto', marginTop: '20px' }}>\r\n                                                                <span style={{ margin: '0px 10px' }}>Nombre: </span>\r\n                                                                <input className='app-input-text' placeholder='Nombre' name={index} a_key={1} onChange={onChangeHandler} value={propsCampos[index]?.[1] ?? \"\"} />\r\n                                                            </div>\r\n                                                            <div style={{ flex: '1 0 auto', alignSelf: 'auto', marginTop: '20px' }}>\r\n                                                                <span style={{ marginRight: '10px' }}>Placeholder: </span>\r\n                                                                <input className='app-input-text' placeholder='Placeholder' name={index} a_key={0} onChange={onChangeHandler} value={propsCampos[index]?.[0] ?? \"\"} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap', alignItems: 'center', marginTop: '10px' }}>\r\n                                                            <div style={{ display: 'flex', marginTop: '20px', alignItems: 'center' }}>\r\n                                                                <span style={{ marginRight: '10px' }}>Requerido: </span>\r\n                                                                <Switch\r\n                                                                    style={{ color: masterState.get().color }}\r\n                                                                    defaultChecked={false}\r\n                                                                    labelOff=\"No\"\r\n                                                                    labelOn='Sí'\r\n                                                                    onChange={() => handleToggleSwitch(index)}\r\n                                                                />\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap', justifyContent: 'flex-start', alignItems: 'center' }}>\r\n                                                            {\r\n                                                                item.type == \"select\" ?\r\n                                                                    <>\r\n                                                                        <span style={{ marginTop: '10px', marginRight: '10px' }}>Valores (separe por barra cada valor): </span>\r\n                                                                        <input className='app-input-text' placeholder='Ej. Item1 | Item2 | Item3' name={index} a_key={3} onChange={onChangeHandler} value={propsCampos[index]?.[3] ?? \"\"} style={{ marginTop: '10px' }} />\r\n                                                                    </> :\r\n                                                                    <></>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <Dialog\r\n                                                        isVisible={flag}\r\n                                                        onBackdropPress={() => setFlag(false)}\r\n                                                        style={{ height: '300px' }}\r\n                                                        showDropShadow={true}>\r\n                                                        <div style={{ padding: '10px' }}>\r\n                                                            <h3>Previsualización</h3>\r\n                                                            <div className=\"app-hr\"></div>\r\n                                                            <div>\r\n                                                                {\r\n                                                                    showPrevisualization(itemModal, indexModal)\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Dialog>\r\n                                                </View>\r\n\r\n                                            </>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </NavPageContainer>\r\n                </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Campos;","C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\components\\Navigation.js",[],"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\stores\\MasterStore.js",[],"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\stores\\AuthStore.js",[],"C:\\Users\\Familia-1\\Documents\\GitHub\\rvInventory\\src\\react\\hooks\\useInput.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"188","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":48},{"ruleId":"183","severity":1,"message":"189","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"183","severity":1,"message":"190","line":3,"column":20,"nodeType":"185","messageId":"186","endLine":3,"endColumn":32},{"ruleId":"183","severity":1,"message":"191","line":3,"column":34,"nodeType":"185","messageId":"186","endLine":3,"endColumn":40},{"ruleId":"183","severity":1,"message":"192","line":3,"column":42,"nodeType":"185","messageId":"186","endLine":3,"endColumn":52},{"ruleId":"183","severity":1,"message":"193","line":3,"column":54,"nodeType":"185","messageId":"186","endLine":3,"endColumn":73},{"ruleId":"183","severity":1,"message":"194","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":2,"column":27,"nodeType":"185","messageId":"186","endLine":2,"endColumn":36},{"ruleId":"183","severity":1,"message":"195","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":21},{"ruleId":"183","severity":1,"message":"196","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":13},{"ruleId":"197","severity":1,"message":"198","line":31,"column":21,"nodeType":"199","messageId":"200","endLine":31,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":36,"column":21,"nodeType":"199","messageId":"200","endLine":36,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":84,"column":101,"nodeType":"203","messageId":"200","endLine":84,"endColumn":105},{"ruleId":"183","severity":1,"message":"184","line":3,"column":17,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":3,"column":27,"nodeType":"185","messageId":"186","endLine":3,"endColumn":36},{"ruleId":"183","severity":1,"message":"204","line":2,"column":39,"nodeType":"185","messageId":"186","endLine":2,"endColumn":50},{"ruleId":"183","severity":1,"message":"205","line":2,"column":52,"nodeType":"185","messageId":"186","endLine":2,"endColumn":58},{"ruleId":"183","severity":1,"message":"206","line":2,"column":60,"nodeType":"185","messageId":"186","endLine":2,"endColumn":81},{"ruleId":"183","severity":1,"message":"207","line":2,"column":83,"nodeType":"185","messageId":"186","endLine":2,"endColumn":95},{"ruleId":"183","severity":1,"message":"208","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":18},{"ruleId":"183","severity":1,"message":"209","line":12,"column":20,"nodeType":"185","messageId":"186","endLine":12,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":3,"column":17,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":3,"column":27,"nodeType":"185","messageId":"186","endLine":3,"endColumn":36},{"ruleId":"183","severity":1,"message":"188","line":3,"column":38,"nodeType":"185","messageId":"186","endLine":3,"endColumn":48},{"ruleId":"183","severity":1,"message":"189","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":18},{"ruleId":"183","severity":1,"message":"210","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":25},{"ruleId":"183","severity":1,"message":"184","line":3,"column":17,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":3,"column":27,"nodeType":"185","messageId":"186","endLine":3,"endColumn":36},{"ruleId":"183","severity":1,"message":"211","line":16,"column":10,"nodeType":"185","messageId":"186","endLine":16,"endColumn":18},{"ruleId":"183","severity":1,"message":"212","line":16,"column":35,"nodeType":"185","messageId":"186","endLine":16,"endColumn":45},{"ruleId":"183","severity":1,"message":"213","line":37,"column":13,"nodeType":"185","messageId":"186","endLine":37,"endColumn":21},{"ruleId":"183","severity":1,"message":"214","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":18},{"ruleId":"183","severity":1,"message":"215","line":6,"column":22,"nodeType":"185","messageId":"186","endLine":6,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":17,"column":6,"nodeType":"218","endLine":17,"endColumn":8,"suggestions":"219"},{"ruleId":"183","severity":1,"message":"220","line":18,"column":10,"nodeType":"185","messageId":"186","endLine":18,"endColumn":15},{"ruleId":"183","severity":1,"message":"221","line":18,"column":17,"nodeType":"185","messageId":"186","endLine":18,"endColumn":25},{"ruleId":"183","severity":1,"message":"222","line":20,"column":7,"nodeType":"185","messageId":"186","endLine":20,"endColumn":15},{"ruleId":"183","severity":1,"message":"213","line":50,"column":13,"nodeType":"185","messageId":"186","endLine":50,"endColumn":21},{"ruleId":"183","severity":1,"message":"223","line":18,"column":29,"nodeType":"185","messageId":"186","endLine":18,"endColumn":38},{"ruleId":"183","severity":1,"message":"220","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":15},{"ruleId":"183","severity":1,"message":"221","line":19,"column":17,"nodeType":"185","messageId":"186","endLine":19,"endColumn":25},{"ruleId":"183","severity":1,"message":"222","line":21,"column":7,"nodeType":"185","messageId":"186","endLine":21,"endColumn":15},{"ruleId":"216","severity":1,"message":"224","line":44,"column":6,"nodeType":"218","endLine":44,"endColumn":8,"suggestions":"225"},{"ruleId":"183","severity":1,"message":"213","line":51,"column":13,"nodeType":"185","messageId":"186","endLine":51,"endColumn":21},{"ruleId":"183","severity":1,"message":"206","line":2,"column":28,"nodeType":"185","messageId":"186","endLine":2,"endColumn":49},{"ruleId":"183","severity":1,"message":"187","line":3,"column":17,"nodeType":"185","messageId":"186","endLine":3,"endColumn":26},{"ruleId":"183","severity":1,"message":"226","line":3,"column":28,"nodeType":"185","messageId":"186","endLine":3,"endColumn":41},{"ruleId":"183","severity":1,"message":"227","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":18},{"ruleId":"183","severity":1,"message":"194","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":14},{"ruleId":"183","severity":1,"message":"228","line":15,"column":9,"nodeType":"185","messageId":"186","endLine":15,"endColumn":16},{"ruleId":"183","severity":1,"message":"213","line":35,"column":13,"nodeType":"185","messageId":"186","endLine":35,"endColumn":21},{"ruleId":"183","severity":1,"message":"213","line":36,"column":13,"nodeType":"185","messageId":"186","endLine":36,"endColumn":21},{"ruleId":"183","severity":1,"message":"194","line":2,"column":28,"nodeType":"185","messageId":"186","endLine":2,"endColumn":32},{"ruleId":"183","severity":1,"message":"213","line":36,"column":13,"nodeType":"185","messageId":"186","endLine":36,"endColumn":21},{"ruleId":"183","severity":1,"message":"194","line":2,"column":87,"nodeType":"185","messageId":"186","endLine":2,"endColumn":91},{"ruleId":"183","severity":1,"message":"229","line":26,"column":12,"nodeType":"185","messageId":"186","endLine":26,"endColumn":18},{"ruleId":"183","severity":1,"message":"230","line":26,"column":20,"nodeType":"185","messageId":"186","endLine":26,"endColumn":29},{"ruleId":"183","severity":1,"message":"231","line":32,"column":12,"nodeType":"185","messageId":"186","endLine":32,"endColumn":22},{"ruleId":"183","severity":1,"message":"232","line":33,"column":12,"nodeType":"185","messageId":"186","endLine":33,"endColumn":21},{"ruleId":"197","severity":1,"message":"233","line":143,"column":24,"nodeType":"199","messageId":"200","endLine":143,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":144,"column":13,"nodeType":"236","messageId":"237","endLine":181,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":194,"column":20,"nodeType":"199","messageId":"200","endLine":194,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":194,"column":33,"nodeType":"199","messageId":"200","endLine":194,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":194,"column":50,"nodeType":"199","messageId":"200","endLine":194,"endColumn":52},{"ruleId":"197","severity":1,"message":"198","line":194,"column":79,"nodeType":"199","messageId":"200","endLine":194,"endColumn":81},{"ruleId":"238","severity":1,"message":"239","line":232,"column":40,"nodeType":"240","messageId":"241","endLine":232,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":237,"column":34,"nodeType":"240","messageId":"241","endLine":237,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":246,"column":40,"nodeType":"240","messageId":"241","endLine":246,"endColumn":42},{"ruleId":"238","severity":1,"message":"239","line":253,"column":41,"nodeType":"240","messageId":"241","endLine":253,"endColumn":43},{"ruleId":"183","severity":1,"message":"213","line":256,"column":23,"nodeType":"185","messageId":"186","endLine":256,"endColumn":31},{"ruleId":"201","severity":1,"message":"242","line":392,"column":183,"nodeType":"203","messageId":"200","endLine":392,"endColumn":193},{"ruleId":"197","severity":1,"message":"198","line":419,"column":75,"nodeType":"199","messageId":"200","endLine":419,"endColumn":77},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useContext' is defined but never used.","'AppTheme' is defined but never used.","'SplashScreen' is defined but never used.","'NavBar' is defined but never used.","'NavBarLink' is defined but never used.","'NavSearchSuggestion' is defined but never used.","'Link' is defined but never used.","'Image' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'flex'.","ObjectExpression","'RadioButton' is defined but never used.","'Button' is defined but never used.","'NavPageContainerRight' is defined but never used.","'LinkCompound' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'ColorPickerItem' is defined but never used.","'ejemmplo' is assigned a value but never used.","'resetInput' is assigned a value but never used.","'response' is assigned a value but never used.","'useInput' is defined but never used.","'useStateRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getControls'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'label' is assigned a value but never used.","'setLabel' is assigned a value but never used.","'enumList' is assigned a value but never used.","'citiesRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCities'. Either include it or remove the dependency array.",["246"],"'createContext' is defined but never used.","'MasterPage' is defined but never used.","'history' is assigned a value but never used.","'dialog' is assigned a value but never used.","'setDialog' is assigned a value but never used.","'insertedId' is assigned a value but never used.","'allCampos' is assigned a value but never used.","Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Duplicate key 'alignItems'.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [getControls]",{"range":"251","text":"252"},"Update the dependencies array to be: [getCities]",{"range":"253","text":"254"},[469,471],"[getControls]",[1065,1067],"[getCities]"]